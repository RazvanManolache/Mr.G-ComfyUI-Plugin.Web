{"version":3,"sources":["jaydata.mscrm.js","src/JayDataModules/jaydata.mscrm.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","$data","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_typeof","Symbol","iterator","constructor","_core","_core2","undefined","odata","__global","OData","originalHttpClient","defaultHttpClient","postMessageODataHandler","postMessageHttpClient","targetIframe","request","_request","success","error","targetOrigin","listener","event","Trace","log","removeEventListener","statusCode","data","addEventListener","postMessage","requestProxy","message","response","MsCrm","disableBatch","Auth","trace","clientAuthorizationPath","messageHandlerPath","login","crmUrl","cb","local","iframe","onMessagehandlerLoaded","MessageHandlerLoaded","contentWindow","onAuthenticated","document","createElement","Authenticated","url","src","style","display","body","appendChild","open","init","crmAddress","contextType","initContext","isAssignableTo","EntityContext","ctx","factory","name","oDataServiceHost","serviceUrl","onReady","then","config","service","location","href","indexOf","jaydata/core"],"mappings":"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","file":"jaydata.mscrm.min.js","sourcesContent":["﻿// JayData 1.5.10 \r\n// Dual licensed under MIT and GPL v2\r\n// Copyright JayStack Technologies (http://jaydata.org/licensing)\r\n//\r\n// JayData is a standards-based, cross-platform Javascript library and a set of\r\n// practices to access and manipulate data from various online and offline sources.\r\n//\r\n// Credits:\r\n//     Hajnalka Battancs, Dániel József, János Roden, László Horváth, Péter Nochta\r\n//     Péter Zentai, Róbert Bónay, Szabolcs Czinege, Viktor Borza, Viktor Lázár,\r\n//     Zoltán Gyebrovszki, Gábor Dolla\r\n//\r\n// More info: http://jaydata.org\r\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define(\"jaydata/modules/mscrmclient\",[\"jaydata/core\"],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.$data = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol ? \"symbol\" : typeof obj; };\n\nvar _core = _dereq_('jaydata/core');\n\nvar _core2 = _interopRequireDefault(_core);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* data js patch to support window messaging */\n/* will be implemented as customHttpClient in next version */\n(function ($data, undefined) {\n    var odata = $data.__global.OData;\n\n    odata.originalHttpClient = odata.defaultHttpClient;\n    $data.postMessageODataHandler = {\n        postMessageHttpClient: {\n            targetIframe: undefined,\n            request: function request(_request, success, error) {\n                var targetIframe = _request.targetIframe || $data.postMessageODataHandler.postMessageHttpClient.targetIframe;\n                var targetOrigin = _request.targetOrigin || $data.postMessageODataHandler.postMessageHttpClient.targetOrigin || '*';\n\n                if (targetIframe) {\n                    var listener = function listener(event) {\n                        $data.Trace.log('in listener');\n                        $data.__global.removeEventListener('message', listener);\n                        var statusCode = event.data.statusCode;\n                        if (statusCode >= 200 && statusCode <= 299) {\n                            success(event.data);\n                        } else {\n                            error(event.data);\n                        }\n                    };\n                    $data.__global.addEventListener('message', listener, false);\n                    $data.Trace.log('before post', targetIframe);\n                    targetIframe.postMessage(_request, targetOrigin);\n                } else {\n                    return odata.originalHttpClient.request(_request, success, error);\n                }\n            }\n        },\n        requestProxy: function requestProxy(request, success, error) {\n            success = request.success || success;\n            error = request.error || error;\n\n            delete request.success;\n            delete request.error;\n\n            var targetIframe = request.targetIframe || $data.postMessageODataHandler.postMessageHttpClient.targetIframe;\n            var targetOrigin = request.targetOrigin || $data.postMessageODataHandler.postMessageHttpClient.targetOrigin || '*';\n\n            if (targetIframe) {\n                request.requestProxy = true;\n                var listener = function listener(event) {\n                    $data.Trace.log('in listener');\n                    $data.__global.removeEventListener('message', listener);\n                    var statusCode = event.data.statusCode;\n                    if (statusCode >= 200 && statusCode <= 299) {\n                        success(event.data);\n                    } else {\n                        error(event.data);\n                    }\n                };\n                $data.__global.addEventListener('message', listener, false);\n                $data.Trace.log('before post', targetIframe);\n                targetIframe.postMessage(request, targetOrigin);\n            } else {\n                error({ message: \"No iframe detected\", request: request, response: undefined });\n            }\n        }\n    };\n    odata.defaultHttpClient = $data.postMessageODataHandler.postMessageHttpClient;\n})(_core2.default);\n\n(function ($data) {\n    $data.MsCrm = {\n        disableBatch: true\n    };\n    $data.MsCrm.Auth = {\n        trace: true,\n        clientAuthorizationPath: \"/WebResources/new_authorize.html\",\n        messageHandlerPath: \"/WebResources/new_postmessage.html\",\n        login: function do_login(crmUrl, cb, local) {\n            var iframe;\n\n            var onMessagehandlerLoaded = function onMessagehandlerLoaded(e) {\n                if ($data.MsCrm.Auth.trace) $data.Trace.log(\"Message received\", crmUrl);\n                if (e.data.MessageHandlerLoaded) {\n                    if ($data.MsCrm.Auth.trace) $data.Trace.log(\"Message handler loaded\", crmUrl);\n                    $data.__global.removeEventListener(\"message\", onMessagehandlerLoaded);\n                    $data.__global.OData.defaultHttpClient.targetIframe = iframe.contentWindow;\n                    cb(iframe.contentWindow, crmUrl);\n                }\n            };\n\n            var onAuthenticated = function onAuthenticated(e) {\n                iframe = document.createElement(\"iframe\");\n                if (e.data.Authenticated) {\n                    $data.Trace.log(\"Logged in to CRM: \" + crmUrl);\n                    $data.__global.removeEventListener(\"message\", onAuthenticated);\n                    $data.__global.addEventListener(\"message\", onMessagehandlerLoaded);\n                    var url = local ? \"postmessage.html\" : crmUrl + $data.MsCrm.Auth.messageHandlerPath;\n                    iframe.src = url;\n                    iframe.style.display = \"none\";\n                    document.body.appendChild(iframe);\n                }\n            };\n            $data.__global.addEventListener(\"message\", onAuthenticated);\n            var url = local ? \"authorize.html\" : crmUrl + $data.MsCrm.Auth.clientAuthorizationPath;\n            url = url;\n            var w = $data.__global.open(url, \"_blank\", \"resizable=false,location=0,menubar=0,toolbar=0,width=400,height=600\");\n        }\n\n    };\n    $data.MsCrm.init = function (crmAddress, contextType, cb) {\n        var config = {};\n        if ((typeof crmAddress === 'undefined' ? 'undefined' : _typeof(crmAddress)) === 'object' && crmAddress) {\n            config = crmAddress;\n            crmAddress = config.url;\n            delete config.url;\n        }\n        var serviceUrl = crmAddress + '/XRMServices/2011/OrganizationData.svc';\n\n        if ($data.__global.location.href.indexOf(crmAddress) > -1) {\n            initContext();\n        } else {\n            $data.MsCrm.Auth.login(crmAddress, function () {\n                initContext();\n            });\n        }\n\n        function initContext() {\n            if (!(contextType.isAssignableTo && contextType.isAssignableTo($data.EntityContext))) {\n                cb = contextType;\n                config.disableBatch = $data.MsCrm.disableBatch;\n                $data.service(serviceUrl, config, function (factory) {\n                    var ctx = factory();\n                    ctx.onReady().then(function () {\n                        cb(ctx, factory);\n                    });\n                });\n            } else {\n                var ctx;\n\n                (function () {\n                    var factory = function factory() {\n                        return new contextType({ name: 'oData', oDataServiceHost: serviceUrl, disableBatch: $data.MsCrm.disableBatch });\n                    };\n\n                    ctx = factory();\n\n                    ctx.onReady().then(function () {\n                        cb(ctx, factory);\n                    });\n                })();\n            }\n        }\n    };\n})(_core2.default);\n\nexports.default = _core2.default;\nmodule.exports = exports['default'];\n\n},{\"jaydata/core\":\"jaydata/core\"}]},{},[1])(1)\n});\n\n","import $data, { $C, Guard, Container, Exception, MemberDefinition } from 'jaydata/core';\r\n\r\n\r\n/* data js patch to support window messaging */\r\n/* will be implemented as customHttpClient in next version */\r\n(function ($data, undefined) {\r\n    var odata = $data.__global.OData;\r\n\r\n    odata.originalHttpClient = odata.defaultHttpClient;\r\n    $data.postMessageODataHandler = {\r\n        postMessageHttpClient: {\r\n            targetIframe: undefined,\r\n            request: function (request, success, error) {\r\n                var targetIframe = request.targetIframe || $data.postMessageODataHandler.postMessageHttpClient.targetIframe;\r\n                var targetOrigin = request.targetOrigin || $data.postMessageODataHandler.postMessageHttpClient.targetOrigin || '*';\r\n\r\n                if (targetIframe) {\r\n                    var listener = function (event) {\r\n                        $data.Trace.log('in listener');\r\n                        $data.__global.removeEventListener('message', listener);\r\n                        var statusCode = event.data.statusCode;\r\n                        if (statusCode >= 200 && statusCode <= 299) {\r\n                            success(event.data);\r\n                        } else {\r\n                            error(event.data);\r\n                        }\r\n                    };\r\n                    $data.__global.addEventListener('message', listener, false);\r\n                    $data.Trace.log('before post', targetIframe);\r\n                    targetIframe.postMessage(request, targetOrigin);\r\n                } else {\r\n                    return odata.originalHttpClient.request(request, success, error);\r\n                }\r\n            }\r\n        },\r\n        requestProxy: function (request, success, error) {\r\n            success = request.success || success;\r\n            error = request.error || error;\r\n\r\n            delete request.success;\r\n            delete request.error;\r\n\r\n            var targetIframe = request.targetIframe || $data.postMessageODataHandler.postMessageHttpClient.targetIframe;\r\n            var targetOrigin = request.targetOrigin || $data.postMessageODataHandler.postMessageHttpClient.targetOrigin || '*';\r\n\r\n\r\n            if (targetIframe) {\r\n                request.requestProxy = true;\r\n                var listener = function (event) {\r\n                    $data.Trace.log('in listener');\r\n                    $data.__global.removeEventListener('message', listener);\r\n                    var statusCode = event.data.statusCode;\r\n                    if (statusCode >= 200 && statusCode <= 299) {\r\n                        success(event.data);\r\n                    } else {\r\n                        error(event.data);\r\n                    }\r\n                };\r\n                $data.__global.addEventListener('message', listener, false);\r\n                $data.Trace.log('before post', targetIframe);\r\n                targetIframe.postMessage(request, targetOrigin);\r\n            } else {\r\n                error({ message: \"No iframe detected\", request: request, response: undefined });\r\n            }\r\n        }\r\n    };\r\n    odata.defaultHttpClient = $data.postMessageODataHandler.postMessageHttpClient;\r\n\r\n})($data);\r\n\r\n(function ($data) {\r\n    $data.MsCrm = {\r\n        disableBatch: true\r\n    };\r\n    $data.MsCrm.Auth = {\r\n        trace: true,\r\n        clientAuthorizationPath: \"/WebResources/new_authorize.html\",\r\n        messageHandlerPath: \"/WebResources/new_postmessage.html\",\r\n        login: function do_login(crmUrl, cb, local) {\r\n            var iframe;\r\n\r\n            var onMessagehandlerLoaded = function (e) {\r\n                if ($data.MsCrm.Auth.trace) $data.Trace.log(\"Message received\", crmUrl);\r\n                if (e.data.MessageHandlerLoaded) {\r\n                    if ($data.MsCrm.Auth.trace) $data.Trace.log(\"Message handler loaded\", crmUrl);\r\n                    $data.__global.removeEventListener(\"message\", onMessagehandlerLoaded);\r\n                    $data.__global.OData.defaultHttpClient.targetIframe = iframe.contentWindow;\r\n                    cb(iframe.contentWindow, crmUrl);\r\n                }\r\n            }\r\n\r\n            var onAuthenticated = function (e) {\r\n                iframe = document.createElement(\"iframe\");\r\n                if (e.data.Authenticated) {\r\n                    $data.Trace.log(\"Logged in to CRM: \" + crmUrl);\r\n                    $data.__global.removeEventListener(\"message\", onAuthenticated);\r\n                    $data.__global.addEventListener(\"message\", onMessagehandlerLoaded);\r\n                    var url = local ? \"postmessage.html\" : crmUrl + $data.MsCrm.Auth.messageHandlerPath;\r\n                    iframe.src = url;\r\n                    iframe.style.display = \"none\";\r\n                    document.body.appendChild(iframe);\r\n                }\r\n            }\r\n            $data.__global.addEventListener(\"message\", onAuthenticated);\r\n            var url = local ? \"authorize.html\" : crmUrl + $data.MsCrm.Auth.clientAuthorizationPath;\r\n            url = url;\r\n            var w = $data.__global.open(url, \"_blank\", \"resizable=false,location=0,menubar=0,toolbar=0,width=400,height=600\");\r\n        }\r\n\r\n    }\r\n    $data.MsCrm.init = function (crmAddress, contextType, cb) {\r\n        var config = {};\r\n        if (typeof crmAddress === 'object' && crmAddress) {\r\n            config = crmAddress;\r\n            crmAddress = config.url;\r\n            delete config.url;\r\n        }\r\n        var serviceUrl = crmAddress + '/XRMServices/2011/OrganizationData.svc';\r\n\r\n        if ($data.__global.location.href.indexOf(crmAddress) > -1) {\r\n            initContext();\r\n        } else {\r\n            $data.MsCrm.Auth.login(crmAddress, function () {\r\n                initContext();\r\n            });\r\n        }\r\n\r\n        function initContext() {\r\n            if (!(contextType.isAssignableTo && contextType.isAssignableTo($data.EntityContext))) {\r\n                cb = contextType;\r\n                config.disableBatch = $data.MsCrm.disableBatch;\r\n                $data.service(serviceUrl, config, function (factory) {\r\n                    var ctx = factory();\r\n                    ctx.onReady().then(function () {\r\n                        cb(ctx, factory);\r\n                    });\r\n                });\r\n            } else {\r\n                function factory() {\r\n                    return new contextType({ name: 'oData', oDataServiceHost: serviceUrl, disableBatch: $data.MsCrm.disableBatch });\r\n                }\r\n                var ctx = factory();\r\n                ctx.onReady().then(function () {\r\n                    cb(ctx, factory);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n})($data);\r\n\r\nexport default $data\r\n"],"sourceRoot":"/source/"}